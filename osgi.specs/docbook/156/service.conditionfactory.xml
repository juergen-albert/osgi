<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (c) Contributors to the Eclipse Foundation
   
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
   
        http://www.apache.org/licenses/LICENSE-2.0
   
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
   
    SPDX-License-Identifier: Apache-2.0 
 -->

<chapter label="156" revision="$Id$" version="5.0" xml:id="service.conditionfactory"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns5="http://www.w3.org/1999/xhtml"
         xmlns:ns4="http://www.w3.org/2000/svg"
         xmlns:ns3="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Condition Factory Specification</title>

  <info>
    <releaseinfo xml:id="service.conditionfactory-version">Version 1.0</releaseinfo>
  </info>

  <section xml:id="service.conditionfactory.introduction">
    <title>Introduction</title>
    <para>Conditions (ADD LINK TO CORE SPEC) can be used, to describe simple or complex runtime states. A Condition In and of itself is nothing more then a standardized way to announce themself to the Framework. The Condition Factory is intended to provide a configurable mechanism to aggregate complex states of your system by checking for the availability or absence of services. It then will provide a predefined Condition other services can track.</para> 
    <section>
      <title>Essentials</title>

      <itemizedlist>
        <listitem>
          <para><emphasis>Condition</emphasis> - A requirement somebody needs fulfilled at runtime.</para>
        </listitem>
        <listitem>
          <para><emphasis>Condition Factory</emphasis> - A factory to aggregate complex states of your system and register a Condition if all requirements are fulfilled.</para>
        </listitem>
      </itemizedlist>
    </section>

    <section xml:id="service.conditionfactory.entities">
      <title>Entities</title>

      <itemizedlist>
        <listitem>
          <para><emphasis>Condition</emphasis> - A Maker Interface used to register a Condition as a Service</para>
        </listitem>
        <listitem>
          <para><emphasis>ConditionFactory</emphasis> - <code>org.osgi.service.cm.ManagedServiceFactory</code> that will register Conditions according to the given configuration</para>
        </listitem>
      </itemizedlist>
    </section>
  </section>
  
  <section xml:id="service.conditionfactory.operation">
    <title>Operation</title>
    <para>The implementation of the <emphasis>ConditionFactory</emphasis> must register a <code>org.osgi.service.cm.ManagedServiceFactory</code> with the service PID <code>osgi.conditionfactory</code>. A configuration it might receive via <code>ConfigurationAdmin</code> can contain two lists of target filters. One for filters that MUST find at least one Service each in order to have a <code>Condition</code> registered. The other one represents a List of filters, that MUST NOT find any matching service. The moment all the included and non of the exclude filters match, a <code>Condition</code> is registered with the given identifier and the additional properties. If any of the include Services go away or an excluded Service becomes available, this <code>Condition</code> must be unregistered.</para>
    <para>In case no match filters of any kind are given, the a condition will be registered the moment the configuration will be applied.</para>
      <table pgwide="1">
      <title>Properties</title>

      <tgroup cols="3">
        <colspec colnum="1" colwidth="2.5*"/>

        <colspec colnum="2" colwidth="0.7*"/>

        <colspec colnum="3" colwidth="3.3*"/>

        <thead>
          <row>
            <entry>Service Property</entry>

            <entry>Type</entry>

            <entry>Description</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry><para><code>condition.id</code></para></entry>

            <entry><para><code>String</code></para><para><emphasis>required</emphasis></para></entry>

            <entry><para>The <code>Constants.CONDITION_ID</code> that will be set to the condition that will be registered if all filters are satisfied.</para></entry>
          </row>
          <row>
            <entry><para><code>condtion.properties.*</code></para></entry>

            <entry><para><code>any</code></para><para><emphasis>optional</emphasis></para></entry>

            <entry><para>Properties like this will be registered with the condition, if all filters are satisfied. <emphasis>condtion.properties.</emphasis> will be cut away and the key will become the * part.</para></entry>
          </row>
          <row>
            <entry><para><code>match.all</code></para></entry>

            <entry><para><code>String+</code></para><para><emphasis>optional</emphasis></para></entry>

            <entry><para>The value of this service property is a List of LDAP-style filter expressions. A <code>Condition</code> will be registered if each filter finds at least one matching service.</para></entry>
          </row>
          <row>
            <entry><para><code>match.none</code></para></entry>

            <entry><para><code>String+</code></para><para><emphasis>optional</emphasis></para></entry>

            <entry><para>The value of this service property is a List of LDAP-style filter expressions. A <code>Condition</code> will be registered if none of the filters finds a matching service.</para></entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    
     <para>An example Configuration utilizing the <xref
    linkend="service.configurator"/> is listed below</para>

    <programlisting>{
    ":configurator:resource-version": 1,
    
    "osgi.conditionfactory~test" : {
    	"condition.id" : "resulting.condition.id",
    	"condition.properties.custom.condition.prop" : "my.property",
    	"match.all" : [
    		"(&amp;(objectClass=org.foo.Bar)(my.prop=foo))",
    		"(my.prop=bar)"
    	],
    	"match.none" : [
    		"(&amp;(objectClass=org.foo.Fizz)(my.prop=buzz))"
    	]
    }
	}</programlisting>
  </section>

  <section xml:id="service.conditionfactory.capabilities">
    <title>Capabilities</title>
    <para>What do we need here? It would make sense to provide a Capability </para>
  </section>

  <section xml:id="service.conditionfactory.security">
    <title>Security</title>
    <para>Requires <xref linkend="framework.security.impliedpermissions"/> to register and get Conditions</para>
    <para>Requires permission to use the config Admin?</para>
  </section>

  <xi:include href="../../generated/javadoc/docbook/org.osgi.service.conditionfactory.xml"/>

</chapter>
